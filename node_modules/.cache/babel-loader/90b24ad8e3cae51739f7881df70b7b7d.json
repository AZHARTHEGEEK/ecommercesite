{"ast":null,"code":"export const CartReducer = (state, action) => {\n  console.log(state);\n  let product;\n  let UpdatedPrice;\n  let UpdatedQty;\n  let index;\n  const {\n    shoppingCart,\n    totalPrice,\n    qty\n  } = state;\n\n  switch (action.type) {\n    case \"ADD TO CART\":\n      const check = shoppingCart.find(product => product.id == action.payload.id);\n\n      if (check) {\n        return state;\n      } else {\n        product = action.payload.product;\n        product['qty'] = 1;\n        UpdatedQty = qty + 1;\n        UpdatedPrice = totalPrice + product.price;\n        return {\n          shoppingCart: [product, ...shoppingCart],\n          totalPrice: UpdatedPrice,\n          qty: UpdatedQty\n        };\n      }\n\n      break;\n\n    case 'INCREMENT':\n      product = action.cart;\n      product.qty = product.qty + 1;\n      UpdatedPrice = totalPrice + product.price;\n      UpdatedQty = qty + 1;\n      index = shoppingCart.findIndex(cart => cart.id === action.id);\n      shoppingCart[index] = product;\n      return {\n        shoppingCart: [...shoppingCart],\n        totalPrice: UpdatedPrice,\n        qty: UpdatedQty\n      };\n      break;\n\n    case 'DECREMENT':\n      product = action.cart;\n\n      if (product.qty > 1) {\n        product.qty = product.qty - 1;\n        UpdatedPrice = totalPrice - product.price;\n        UpdatedQty = qty - 1;\n        index = shoppingCart.findIndex(cart => cart.id === action.id);\n        shoppingCart[index] = product;\n        return {\n          shoppingCart: [...shoppingCart],\n          totalPrice: UpdatedPrice,\n          qty: UpdatedQty\n        };\n      } else {\n        return state;\n      }\n\n      break;\n\n    case 'DELETE':\n      const filltered = shoppingCart.filter(product => product.id !== action.id);\n      product = action.cart;\n      UpdatedQty = qty - product.qty;\n      UpdatedPrice = totalPrice - product.price * product.qty;\n      return {\n        shoppingCart: [...filltered],\n        totalPrice: UpdatedPrice,\n        qty: UpdatedQty\n      };\n\n    default:\n      return state;\n  }\n};\n_c = CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Product image 2-20210615T173310Z-001/ecommercesite/src/reducer/CartReducer.js"],"names":["CartReducer","state","action","console","log","product","UpdatedPrice","UpdatedQty","index","shoppingCart","totalPrice","qty","type","check","find","id","payload","price","cart","findIndex","filltered","filter"],"mappings":"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","sourcesContent":["export const CartReducer=(state,action)=>{\n    console.log(state)\n    let product\n    let UpdatedPrice\n    let UpdatedQty\n    let index\n    const {shoppingCart , totalPrice , qty}=state\n    switch(action.type){\n        case \"ADD TO CART\":\n        const check=shoppingCart.find(product => product.id == action.payload.id)\n        if(check){\n            return state\n        }\n        else{\n            product=action.payload.product; \n            product['qty']= 1 ;   \n            UpdatedQty=qty + 1;\n            UpdatedPrice=totalPrice + product.price\n            return {shoppingCart:[product , ...shoppingCart],totalPrice:UpdatedPrice,qty:UpdatedQty}\n        }\n        break\n\n        case 'INCREMENT':\n            product=action.cart\n            product.qty=product.qty +1\n            UpdatedPrice=totalPrice + product.price\n            UpdatedQty=qty + 1\n            index=shoppingCart.findIndex(cart => cart.id === action.id)\n            shoppingCart[index]=product\n            return{ shoppingCart:[...shoppingCart],totalPrice:UpdatedPrice,qty:UpdatedQty}\n\n        break\n\n        case 'DECREMENT':\n            product=action.cart\n            if(product.qty > 1){\n                product.qty=product.qty - 1;\n                UpdatedPrice=totalPrice - product.price\n                UpdatedQty=qty - 1;\n                index=shoppingCart.findIndex(cart => cart.id === action.id)\n                shoppingCart[index]=product\n                return{shoppingCart:[...shoppingCart],totalPrice:UpdatedPrice,qty:UpdatedQty}\n            }\n            else{\n                return state\n            }\n            break;\n\n            case 'DELETE':\n                const filltered=shoppingCart.filter(product => product.id !== action.id)\n                product=action.cart\n                UpdatedQty=qty - product.qty\n                UpdatedPrice= totalPrice - product.price * product.qty;\n                return {shoppingCart: [...filltered],totalPrice:UpdatedPrice,qty:UpdatedQty}\n        \n            default:\n\n            return state\n           \n    }\n\n}"]},"metadata":{},"sourceType":"module"}